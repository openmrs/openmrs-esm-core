@use '@carbon/layout';
@use '@carbon/react/scss/themes';
@use '@carbon/react/scss/theme';
@use '@openmrs/esm-styleguide/src/vars' as *;

.popup {
  position: fixed;
  bottom: 0;
  left: 0;
  width: 100%;
  z-index: 100000;
  background-color: theme.$background;
  border-top: 2px solid $ui-05;
  color: $color-gray-100;
  box-sizing: border-box;

  transition: height 0.05s ease;
  tr {
    th,
    td {
      color: theme.$text-secondary;
    }
  }
}

.content {
  width: 100%;
  height: calc(100% - 50px);
  overflow-y: auto;
}

.tabs {
  min-width: 30rem;
  overflow-x: hidden;
  overflow-y: auto;
  position: relative;

  :global(.cds--content-switcher-btn) {
    min-width: fit-content;
    border: none;
    &::after {
      display: none;
    }

    &::before {
      display: none;
    }

    &:last-child {
      border-right: none !important;
      border-radius: 0 !important;
    }

    &:first-child {
      border-left: none !important;
      border-radius: 0 !important;
    }
  }
}

.topBar {
  width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
  z-index: 2;
  background-color: theme.$background;
}

.closeButton {
  svg {
    fill: theme.$icon-primary;
  }
}

.resizer {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 10px;
  background-color: transparent;
  cursor: n-resize;
  display: flex;
  justify-content: center;
  align-items: center;
  transform: translateY(-5px);
  z-index: 100001;

  &:hover .resizerHandle {
    background-color: theme.$icon-primary;
  }
}

.resizerHandle {
  width: 60px;
  height: 4px;
  border-radius: 2px;
  background-color: theme.$border-subtle;
  transition: background-color 0.2s ease;
}

// Global class to prevent text selection during resizing
:global(.no-select) {
  user-select: none !important;
  cursor: ns-resize !important;

  * {
    user-select: none !important;
  }
}
