name: E2E Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  TURBO_API: 'http://127.0.0.1:9080'
  TURBO_TOKEN: ${{ secrets.TURBO_SERVER_TOKEN }}
  TURBO_TEAM: ${{ github.repository_owner }}

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      test-changes: ${{ steps.changes.outputs.test-sources }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Check if any source code has changed
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            test-sources:
              - 'packages/**/src/**/*!(.test).ts'
              - 'packages/**/src/**/*!(.test).tsx'
              - 'packages/**/src/**/*!(.test).js'
              - 'packages/**/src/**/*!(.test).jsx'
              - 'packages/**/src/**/*.scss'
              - 'packages/**/src/routes.json'
              - 'package.json'
              - 'playwright.config.ts'
              - 'e2e/**/*.ts'
              - 'e2e/**/*.js'
              - 'e2e/support/github/**/*.*'
              - 'example.env'
              - '.github/workflows/e2e.yml'

  build:
    needs: changes
    if: ${{ needs.changes.outputs.test-changes == 'true' }}

    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Copy test environment variables
        run: cp example.env .env

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn install --immutable

      - name: Setup local cache server for Turborepo
        uses: felixmosh/turborepo-gh-artifacts@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          server-token: ${{ env.TURBO_TOKEN }}

      - name: Build apps
        run: yarn turbo run build --color --concurrency=5

      - name: Run dev server
        run: bash e2e/support/github/run-e2e-docker-env.sh

      - name: Copy test environment variables
        run: cp example.env .env

      - name: Install Playwright Browsers
        run: npx playwright install chromium --with-deps

      - name: Wait for the OpenMRS instance to start
        run: while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:8080/openmrs/login.htm)" != "200" ]]; do sleep 10; done

      - name: Run E2E tests
        run: yarn playwright test

      - name: Upload Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: report-esm-core
          path: playwright-report/
          retention-days: 30


  run-patient-management-e2e-tests:
    needs: changes
    if: ${{ needs.changes.outputs.test-changes == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout esm-core repo
        uses: actions/checkout@v4

      - name: Copy test environment variables
        run: cp example.env .env

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Setup local cache server for Turborepo
        uses: felixmosh/turborepo-gh-artifacts@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          server-token: ${{ env.TURBO_TOKEN }}

      - name: Install dependencies
        run: yarn install --immutable

      - name: Build apps
        run: yarn turbo run build --color --concurrency=5

      - name: Run dev server
        run: bash e2e/support/github/run-e2e-docker-env.sh

      - name: Checkout to the repo's main branch
        uses: actions/checkout@v4
        with:
          repository: openmrs/openmrs-esm-patient-management
          ref: main
          path: e2e_repo

      - name: Copy test environment variables
        run: cp example.env .env
        working-directory: e2e_repo

      - name: Install dependencies
        run: yarn install --immutable
        working-directory: e2e_repo

      - name: Wait for the OpenMRS instance to start
        run: while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:8080/openmrs/login.htm)" != "200" ]]; do sleep 10; done

      - name: Run E2E tests
        run: yarn playwright test
        working-directory: e2e_repo

      - name: Upload Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: report-patient-management
          path: e2e_repo/playwright-report/
          retention-days: 30
